name: CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Login Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4️⃣ Build & push api-gateway
      - name: Build & push api-gateway
        uses: docker/build-push-action@v6
        with:
          context: ./api-gateway
          file: ./api-gateway/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 5️⃣ Build & push auth
      - name: Build & push auth
        uses: docker/build-push-action@v6
        with:
          context: ./auth
          file: ./auth/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/auth:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 6️⃣ Build & push product
      - name: Build & push product
        uses: docker/build-push-action@v6
        with:
          context: ./product
          file: ./product/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/product:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 7️⃣ Build & push order
      - name: Build & push order
        uses: docker/build-push-action@v6
        with:
          context: ./order
          file: ./order/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/order:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy on Localhost (Windows Runner)
    needs: build-and-push
    runs-on: self-hosted

    steps:
      # 1️⃣ Kiểm tra Docker environment
      - name: Check Docker environment
        run: |
          Write-Host "Checking Docker environment..."
          docker --version
          docker-compose --version

      # 2️⃣ Login Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3️⃣ Dừng và xóa containers cũ
      - name: Stop and remove old containers
        run: |
          Write-Host "Stopping old containers..."
          cd "D:\HTTT18B\Nam4_1\LTHDV\EProject-Phase-1"
          docker-compose down --remove-orphans || Write-Host "No containers to stop"

      # 4️⃣ Pull images mới nhất
      - name: Pull latest Docker images
        run: |
          Write-Host "Pulling latest Docker images..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/auth:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/product:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/order:latest
          Write-Host "All images pulled successfully"

      # 5️⃣ Deploy với docker-compose
      - name: Deploy with docker-compose
        run: |
          Write-Host "Deploying services..."
          cd "D:\HTTT18B\Nam4_1\LTHDV\EProject-Phase-1"
          docker-compose up -d --remove-orphans --force-recreate
          Write-Host "Deployment completed"

      # 6️⃣ Thông báo deployment hoàn tất
      - name: Deployment summary
        run: |
          Write-Host "DEPLOYMENT COMPLETED SUCCESSFULLY!"
          Write-Host "Services currently running:"
          docker ps --format "• {{.Names}} ({{.Status}})"
