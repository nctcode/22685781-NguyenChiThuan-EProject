name: CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-and-push:
    name: üß± Build & Push Docker Images
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3Ô∏è‚É£ Login Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4Ô∏è‚É£ Build & push api-gateway
      - name: Build & push api-gateway
        uses: docker/build-push-action@v6
        with:
          context: ./api-gateway
          file: ./api-gateway/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 5Ô∏è‚É£ Build & push auth
      - name: Build & push auth
        uses: docker/build-push-action@v6
        with:
          context: ./auth
          file: ./auth/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/auth:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 6Ô∏è‚É£ Build & push product
      - name: Build & push product
        uses: docker/build-push-action@v6
        with:
          context: ./product
          file: ./product/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/product:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 7Ô∏è‚É£ Build & push order
      - name: Build & push order
        uses: docker/build-push-action@v6
        with:
          context: ./order
          file: ./order/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/order:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: üöÄ Deploy on Localhost (Windows Runner)
    needs: build-and-push
    runs-on: self-hosted

    steps:
      # 1Ô∏è‚É£ Ki·ªÉm tra Docker environment
      - name: Check Docker environment
        run: |
          echo "üîç Checking Docker environment..."
          docker --version
          docker-compose --version
          docker ps

      # 2Ô∏è‚É£ Login to Docker Hub tr√™n Windows runner
      - name: Login to Docker Hub on Windows
        run: |
          docker login -u $env:DOCKER_USERNAME -p $env:DOCKER_PASSWORD
          echo "‚úÖ Logged in to Docker Hub successfully"
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      # 3Ô∏è‚É£ D·ª´ng v√† x√≥a containers c≈©
      - name: Stop and remove old containers
        run: |
          echo "üõë Stopping old containers..."
          cd "D:\HTTT18B\Nam4_1\LTHDV\EProject-Phase-1"
          docker-compose down --remove-orphans --volumes || echo "No containers to stop"

      # 4Ô∏è‚É£ Pull images m·ªõi nh·∫•t t·ª´ Docker Hub
      - name: Pull latest Docker images
        run: |
          echo "üì• Pulling latest Docker images..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest || echo "‚ö†Ô∏è Failed to pull api-gateway"
          docker pull ${{ secrets.DOCKER_USERNAME }}/auth:latest || echo "‚ö†Ô∏è Failed to pull auth"
          docker pull ${{ secrets.DOCKER_USERNAME }}/product:latest || echo "‚ö†Ô∏è Failed to pull product"
          docker pull ${{ secrets.DOCKER_USERNAME }}/order:latest || echo "‚ö†Ô∏è Failed to pull order"
          echo "‚úÖ All images pulled successfully"

      # 5Ô∏è‚É£ Deploy v·ªõi docker-compose (s·ª≠ d·ª•ng images m·ªõi nh·∫•t)
      - name: Deploy with docker-compose
        run: |
          echo "üöÄ Deploying with docker-compose..."
          cd "D:\HTTT18B\Nam4_1\LTHDV\EProject-Phase-1"
          docker-compose up -d --remove-orphans --force-recreate
          echo "‚úÖ Deployment completed"

      # 6Ô∏è‚É£ Ki·ªÉm tra tr·∫°ng th√°i deployment
      - name: Verify deployment status
        run: |
          echo "üìä Deployment Status:"
          echo "======================"
          docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
          echo "======================"
          
          # Ki·ªÉm tra c√°c containers ƒëang ch·∫°y
          running_containers=$(docker ps --format "{{.Names}}" | wc -l)
          echo "üìà Running containers: $running_containers"
          
          if [ $running_containers -gt 0 ]; then
            echo "‚úÖ Deployment successful - $running_containers containers are running"
          else
            echo "‚ùå Deployment failed - No containers running"
            exit 1
          fi

      # 7Ô∏è‚É£ Ki·ªÉm tra health c·ªßa services (sau 30 gi√¢y)
      - name: Check services health
        run: |
          echo "üè• Checking services health..."
          timeout 90 bash -c '
            while true; do
              healthy_count=$(docker ps --filter "health=healthy" --format "{{.Names}}" | wc -l)
              if [ $healthy_count -gt 0 ]; then
                echo "‚úÖ $healthy_count services are healthy"
                break
              else
                echo "‚è≥ Waiting for services to become healthy..."
                sleep 10
              fi
            done
          ' || echo "‚ö†Ô∏è Some services may not have health checks"

      # 8Ô∏è‚É£ D·ªçn d·∫πp Docker resources kh√¥ng s·ª≠ d·ª•ng
      - name: Clean up unused Docker resources
        run: |
          echo "üßπ Cleaning up unused Docker resources..."
          docker image prune -f
          docker container prune -f
          echo "‚úÖ Cleanup completed"

      # 9Ô∏è‚É£ Th√¥ng b√°o deployment ho√†n t·∫•t
      - name: Deployment summary
        run: |
          echo "üéâ DEPLOYMENT COMPLETED SUCCESSFULLY!"
          echo "======================================"
          echo "üì¶ Services deployed:"
          docker ps --format "‚Ä¢ {{.Names}} ({{.Status}})"
          echo "======================================"