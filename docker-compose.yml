version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
        - ecommerce
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/ 
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - ecommerce
    restart: unless-stopped
    
  auth:
    image: nct2903/auth:latest
    build: ./auth
    container_name: auth
    ports:
      - "3000:3000"
    env_file: ./auth/.env
    networks:
      - ecommerce
    depends_on:
      - mongodb
    restart: unless-stopped

  api-gateway:
    image: nct2903/api-gateway:latest 
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "3003:3003"
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - ecommerce
    depends_on: 
      - auth
      - product
      - order
    restart: unless-stopped

  product:
    image: nct2903/product:latest
    build: ./product
    container_name: product
    ports:
      - "3001:3001"
    env_file: ./product/.env
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - ecommerce
    depends_on:
      - mongodb
      - rabbitmq
    restart: unless-stopped
    
  order:
    image: nct2903/order:latest 
    build: ./order
    container_name: order
    ports:
      - "3002:3002"
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
    env_file: ./order/.env
    networks:
      - ecommerce
    depends_on:
      - mongodb
      - rabbitmq
    restart: unless-stopped

networks:
  ecommerce: